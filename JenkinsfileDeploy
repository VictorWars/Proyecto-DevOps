pipeline {
    agent any

    stages {
        stage('Get Kibana and Elastic image'){
            steps{
                sh 'docker pull elasticsearch:8.7.0 || true'
                sh 'docker pull kibana:8.7.0 || true'
            }
        }
        stage('Create image from Dockerfile') {
            steps {
                sh 'docker network create --driver bridge --subnet 172.19.0.0/16 devops-net || true'
                sh 'docker build -t api-devops-${GIT_BRANCH}-1.0.0:${BUILD_NUMBER} .'
            }
        }
        stage('Run image elastic and Kibana'){
            steps{
                sh 'docker run --name kibana --net devops-net --ip 172.19.0.3 -p 5601:5601 -e xpack.security.enabled=false -e discovery.type=single-node -d kibana:8.7.0 || true'
                sh 'docker run --name elastic --net devops-net --ip 172.19.0.2 -p 9200:9200 -e discovery.type=single-node -e ES_JAVA_OPTS="-Xms1g -Xmx1g" -e xpack.security.enabled=false -d elasticsearch:8.7.0 || true'
                sh 'docker start elastic'
                sh 'docker start kibana'
            }
        }
        stage('Stop older version containers'){
            steps {
                sh ''' 
                containers=$(docker ps | grep api-devops* | awk '{print $1}')
                if [ ! -z $containers ];
                then
	                docker container stop $containers
                fi
                ''' 
            }
        }
        stage('Run container'){
            steps{
                sh 'docker run -d -p 3000:3000 --network devops-net api-devops-${GIT_BRANCH}-1.0.0:${BUILD_NUMBER}'
            }
        }
    }
}